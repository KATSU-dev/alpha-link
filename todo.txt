- Side Bar
    - Awareness of activated route. Smarter/more accurate active icons

- Posts
    - Report
    - Delete


- Loading skeleton animation
    - Profile
    - Newsfeed
    - Challenge
- Lazy loading
    - Challenges
    - Newsfeed
    - User Posts
    







Battles:
	p1 and p2 scan in native to load partner
	p1 submits open challenge - must scan DMOG to submit request
	p2 accepts the challenge - must scan DMOG to accept challenge
	
	p1 and p2 do dmog battle
	p1's battle is round 1
	p2's battle is round 2
	If draw, swap digiroms and try again for rounds 3 and 4

	Both players receive currency, xp, and ELO
	Winner gets more

Battle Log:
{
	type: "DMOG",
	p1: "PlayerOneName",
	p1_partner: "PlayerOneIndex",
	p2: "PlayerTwoName",
	p2_partner: "PlayerTwoIndex",
	rounds: [1, 0, 1, 0, 1, 1]	// 1 = p1 wins, 0 = p1 lose
}






export interface IChallenge {
    challenger: string, // Originator username
    target: string,     // 'challenge/global' or 'challenge/user/{username}'
    global: boolean,
    accepted: boolean,
    type: vpet,
    bg: string,
    mon: string,
    stage: number,
    when: number,
}



MQTT listening service in background after submitting challenge
    -> when response, pulls up confirmation window
